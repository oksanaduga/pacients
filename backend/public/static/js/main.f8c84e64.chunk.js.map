{"version":3,"sources":["RegistrationForm.js","UsersList.js","SearchUsers.js","index.js"],"names":["RegistrationForm","props","data","value","onSubmit","submit","class","for","type","id","name","onChange","change","placeholder","sex","date","address","medicine","UsersList","rows","SearchUsers","Index","state","registeredUsers","searchData","registeredUsersLastIndex","userDataForm","handleSubmit","bind","handleChange","handleChangeUserDataForm","handleEditUser","handleDeleteUser","newState","JSON","parse","localStorage","getItem","this","setState","event","newId","newUser","newRegisteredUsers","map","user","i","oldId","serialObjNewState","stringify","setItem","target","oldDataForm","idUserForEdit","dataset","userId","filterUsersById","filter","el","includes","href","data-user-id","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8c84e64.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction RegistrationForm(props) {\n    const data = props.value;\n    //const dataForm = this.props.userDataForm;\n    return(\n      <form onSubmit={props.submit}>\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"name\">ФИО</label>\n          <input class=\"form-control\" type=\"text\" id=\"name\" name=\"name\"\n              value={data.name}\n              onChange={props.change}\n              placeholder=\"Иванов Иван Иванович\"\n          />\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"sex\">Пол</label>\n          <select class=\"form-control\" id=\"sex\" name=\"sex\"\n              value={data.sex}\n              onChange={props.change}>\n                <option>мужской</option>\n                <option>женский</option>\n           </select>\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\" for=\"date\">Дата рождения</label>\n            <input class=\"form-control\" type=\"date\" id=\"date\" name=\"date\"\n              value={data.date}\n              onChange={props.change}\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\" for=\"address\">Адрес</label>\n            <input class=\"form-control\" type=\"text\" id=\"address\" name=\"address\"\n              value={data.address}\n              onChange={props.change}\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\" for=\"medicine\">Номер полиса ОМС</label>\n            <input class=\"form-control\" type=\"text\" id=\"medicine\" name=\"medicine\"\n                value={data.medicine}\n                onChange={props.change}\n                placeholder=\"00000000000\"\n             />\n          </div>\n\n          <input class=\"btn btn-light\" type='submit' value='Сохранить'/>\n      </form>\n    );\n}\n\nexport default RegistrationForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction UsersList(props) {\n  const rows = props.rows;\n  return(\n    <table class=\"table table-success table-stripedt\">\n      <thead>\n        <tr class=\"table-light\">\n          <th class=\"table-light\">№</th>\n          <th class=\"table-light\">ФИО</th>\n          <th class=\"table-light\">Пол</th>\n          <th class=\"table-light\">Дата рождения</th>\n          <th class=\"table-light\">Адрес</th>\n          <th class=\"table-light\">Номер полиса ОМС</th>\n          <th class=\"table-light\">Действие</th>\n        </tr>\n       </thead>\n       <tbody>\n        {rows}\n      </tbody>\n    </table>\n );\n};\n\nexport default UsersList;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction SearchUsers(props) {\n  const value = props.value;\n  const change = props.change;\n  return(\n    <form>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"search\">Поиск:</label>\n        <input class=\"form-control\" type=\"text\" id=\"search\" name=\"search\"\n          value={value}\n          onChange={change}\n        />\n    </div>\n    </form>\n );\n};\n\nexport default SearchUsers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport RegistrationForm from './RegistrationForm.js';\nimport UsersList from './UsersList.js';\nimport SearchUsers from './SearchUsers.js';\n\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registeredUsers: [],\n      searchData: '',\n      registeredUsersLastIndex: 0,\n      userDataForm: {\n        name: '',\n        sex: 'мужской',\n        date: '',\n        address: '',\n        medicine: '',\n        id: '',\n      },\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeUserDataForm = this.handleChangeUserDataForm.bind(this);\n    this.handleEditUser = this.handleEditUser.bind(this);\n    this.handleDeleteUser = this.handleDeleteUser.bind(this);\n  }\n\n  componentDidMount() {\n    const newState = JSON.parse(localStorage.getItem(\"newState\"))\n    this.setState(newState);\n  }\n\n  handleSubmit(event) {\n    const { registeredUsers, registeredUsersLastIndex, userDataForm } = this.state;\n    let newState = {};\n\n    if (userDataForm.id == '') {\n      const newId = registeredUsersLastIndex + 1;\n      userDataForm.id = newId;\n      const newUser = { ...userDataForm };\n      newState.registeredUsers = [...registeredUsers, newUser];\n      newState.registeredUsersLastIndex = newId;\n    } else {\n      const newRegisteredUsers = registeredUsers.map((user, i) => {\n        if (user.id == userDataForm.id) {\n          const oldId = user.id;\n          userDataForm.id = oldId;\n          user[i] = userDataForm;\n          return user[i];\n        }\n        return user;\n      });\n      newState.registeredUsers = newRegisteredUsers;\n    }\n    newState.userDataForm = {\n        name: '',\n        sex: 'мужской',\n        date: '',\n        address: '',\n        medicine: '',\n        id: '',\n    };\n    var serialObjNewState = JSON.stringify(newState)\n    localStorage.setItem('newState', serialObjNewState);\n  }\n\n  handleChange(event) {\n    this.setState({ searchData: event.target.value })\n  }\n\n  handleChangeUserDataForm(event) {\n    const oldDataForm = this.state.userDataForm;\n    const { name, value } = event.target;\n    const newState = { userDataForm: { ...oldDataForm, [name]: value } };\n    this.setState(newState);\n  }\n\n  handleEditUser(event) {\n    const idUserForEdit = event.target.dataset.userId;\n    const { registeredUsers, userDataForm } = this.state;\n    const filterUsersById = registeredUsers.filter((el) => el['id'] == idUserForEdit)[0];\n    const { name, sex, date, address, medicine, id } = filterUsersById;\n\n      this.setState({\n        userDataForm: {\n          name: name,\n          sex: sex,\n          date: date,\n          address: address,\n          medicine: medicine,\n          id: id,\n        }\n      });\n  }\n\n  handleDeleteUser(event) {\n    const idUserForEdit = event.target.dataset.userId;\n    const { registeredUsers, userDataForm } = this.state;\n    const filterUsersById = registeredUsers.filter((el) => el['id'] != idUserForEdit);\n    this.setState({registeredUsers: [...filterUsersById ]});\n  }\n\n  render() {\n    const { searchData, registeredUsers, userDataForm } = this.state;\n    const filterUsers = registeredUsers.filter((el) => {\n      const { name, sex, date, address, medicine } = el;\n      return name.includes(searchData) ||\n             sex.includes(searchData) ||\n             date.includes(searchData) ||\n             address.includes(searchData) ||\n             medicine.includes(searchData);\n    });\n\n    const rows = filterUsers.map((el, i) => {\n      const { name, sex, date, address, medicine, id } = el;\n       return (\n         <tr key={id}>\n           <td>{i + 1}</td>\n           <td>{name}</td>\n           <td>{sex}</td>\n           <td>{date}</td>\n           <td>{address}</td>\n           <td>{medicine}</td>\n           <td>\n              <a href=\"#\" name='edit' data-user-id={id} onClick={this.handleEditUser}>Редактировать &nbsp;</a>\n              <a href=\"#\" name='delete' data-user-id={id} onClick={this.handleDeleteUser}>Удалить</a>\n           </td>\n         </tr>\n       )\n    });\n\n    return(\n      <div class=\"container-fluid\">\n        <div class='row'>\n          <div class='col-3'>\n            <h2>Регистрация</h2>\n            <RegistrationForm value={this.state.userDataForm}\n              submit={this.handleSubmit}\n              change={this.handleChangeUserDataForm}\n            />\n          </div>\n          <div class='col-9'>\n            <h2>Зарегистрированные пользователи</h2>\n            <SearchUsers value={this.state.searchData} change={this.handleChange}/>\n            <UsersList rows={rows}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <Index />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}